[gd_resource type="VisualShader" load_steps=10 format=2]

[ext_resource path="res://game/assets/shader/WaterTexture.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeTransformVecMult" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=4]

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=6]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVec3Constant" id=8]
output_port_for_preview = 0
constant = Vector3( 0, -0.1, 0 )

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_17;



void vertex() {
// Output:0

}

void fragment() {
// Vector:7
	vec3 n_out7p0 = vec3(0.000000, -0.100000, 0.000000);

// Input:11
	float n_out11p0 = TIME;

// VectorOp:15
	vec3 n_out15p0 = n_out7p0 * vec3(n_out11p0);

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:16
	vec3 n_out16p0 = n_out15p0 + n_out2p0;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out16p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, n_out16p0.xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// Output:0
	ALBEDO = n_out4p0;
	EMISSION = n_out4p0;
	NORMALMAP = n_out17p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1050.37, 406 )
nodes/fragment/0/position = Vector2( 580, 180 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -1180, 200 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( -140, -40 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -1120, -500 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -1260, 0 )
nodes/fragment/14/node = SubResource( 2 )
nodes/fragment/14/position = Vector2( 80, -380 )
nodes/fragment/15/node = SubResource( 3 )
nodes/fragment/15/position = Vector2( -680, -360 )
nodes/fragment/16/node = SubResource( 4 )
nodes/fragment/16/position = Vector2( -620, 320 )
nodes/fragment/17/node = SubResource( 5 )
nodes/fragment/17/position = Vector2( -140, 560 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 7, 0, 15, 0, 11, 0, 15, 1, 15, 0, 16, 0, 2, 0, 16, 1, 16, 0, 4, 0, 16, 0, 17, 0, 17, 0, 0, 8, 4, 0, 0, 5 )
